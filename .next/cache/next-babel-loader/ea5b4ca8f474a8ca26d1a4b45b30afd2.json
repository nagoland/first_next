{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nconst initial = {\n  message: \"START\",\n  count: 0\n};\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        message: \"INCREMENT\",\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        message: \"DECREMENT\",\n        count: state.count - 1\n      };\n\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/nagoyawataru/Desktop/next/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,KAAK,EAAE;AAFK,CAAhB;;AAKA,SAASC,cAAT,CAAyBC,KAAK,GAAGJ,OAAjC,EAA0CK,MAA1C,EAAkD;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAO;AACHL,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFZ,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAjBR;AAmBH;;AAED,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGJ,OAA3B,EAAoC;AACvC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EACdN,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\n\nconst initial = {\n    message: \"START\",\n    count: 0\n}\n\nfunction counterReducer (state = initial, action) {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return {\n                message: \"INCREMENT\",\n                count: state.count + 1\n            }\n        case \"DECREMENT\":\n            return {\n                message: \"DECREMENT\",\n                count: state.count - 1\n            }\n        case \"RESET\":\n            return {\n                message: \"RESET\",\n                count: initial.count\n            }\n        default:\n            return state\n    }\n}\n\nexport function initStore(state = initial) {\n    return createStore(counterReducer, state,\n        applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}